run = "npm run dev"
entrypoint = "index.js"
hidden = [".config", "package-lock.json", ".next", ".swc"]
modules = ["nodejs-22"]

[nix]
channel = "stable-24_11"

[env]
NEXT_TELEMETRY_DISABLED = "1"

[deployment]
build = ["sh", "-c", "npm run build && cp -r public .next/standalone/ && cp -r .next/static .next/standalone/.next/"]
deploymentTarget = "cloudrun"
run = ["sh", "-c", "npm start"]

# Properly configured for Next.js standalone mode

[[deployment.responseHeaders]]
path = "/*"
name = "Cache-Control"
value = "public, max-age=0, must-revalidate"

[[ports]]
localPort = 3000
externalPort = 80

[[ports]]
localPort = 43821
externalPort = 3000

[workflows]
runButton = "Clean Build & Fix Dashlane Issues"

[[workflows.workflow]]
name = "Run"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Generate Sitemap"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run generate-sitemap"

[[workflows.workflow]]
name = "Build for Deployment"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run build"

[[workflows.workflow]]
name = "Build and Test Deployment"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run build"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx serve -s .next/standalone -l 3000"

[[workflows.workflow]]
name = "Deploy Preview"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run build"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd .next/standalone && PORT=3000 node server.js"

[[workflows.workflow]]
name = "Development Server"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Fix Hydration Issues"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Clean Build & Restart Dev Server"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Clean Build & Fix Dashlane Issues"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS='--no-warnings' npm run dev"

[[workflows.workflow]]
name = "Git Push to GitHub"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git add ."

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git commit -m \"Update project files\" "

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git push -u origin main"

[[workflows.workflow]]
name = "Automatic Git Push"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Reset any possible lock files"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .git/config.lock .git/refs/remotes/origin/main.lock 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Add all changes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git add ."

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Commit with timestamp"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git commit -m \"Automatic update $(date '+%Y-%m-%d %H:%M:%S')\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Force push to ensure success (use with caution)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git push -u origin main --force"

[[workflows.workflow]]
name = "Git Operations"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean up any Git lock files"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .git/index.lock .git/config.lock .git/refs/remotes/origin/main.lock 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Force a clean Git state"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global --add safe.directory /home/runner/workspace"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global user.name \"Dr Jan Duffy\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global user.email \"your-email@example.com\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Add all changes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git add ."

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Commit with descriptive message including timestamp"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git commit -m \"Update: $(date '+%Y-%m-%d %H:%M:%S')\" || echo \"No changes to commit\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Push to remote with better error handling"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git push -u origin main --force || (git pull --rebase && git push -u origin main)"

[[workflows.workflow]]
name = "Git Maintenance"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Prune remote tracking branches"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git remote prune origin"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Garbage collection to optimize repository"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git gc --aggressive --prune=now"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Verify repository integrity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git fsck --full"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Show repository status"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git status"

[[workflows.workflow]]
name = "Sync From GitHub"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean up any Git lock files first"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .git/index.lock .git/config.lock .git/refs/remotes/origin/main.lock 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Force reset to match GitHub exactly (use with caution!)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git fetch origin"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git reset --hard origin/main"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean untracked files"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git clean -fd"

[[workflows.workflow]]
name = "GitHub Pro"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Reset any lock files that might be causing issues"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .git/index.lock .git/config.lock .git/refs/remotes/origin/main.lock .git/HEAD.lock 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Configure Git with proper credentials"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global core.fileMode false"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global --add safe.directory /home/runner/workspace"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global user.name \"Dr Jan Duffy\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global user.email \"your-email@example.com\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Add all changes with detailed status"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üìù Staging changes...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git add --all"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git status --short"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Smart commit with timestamp and branch info"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîí Committing changes...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "BRANCH=$(git rev-parse --abbrev-ref HEAD)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git commit -m \"Update[$BRANCH]: $(date '+%Y-%m-%d %H:%M:%S')\" -m \"Changes made in Replit workspace\" || echo \"No changes to commit\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Push with better error handling and progress feedback"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üöÄ Pushing to GitHub...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git push -u origin $BRANCH --force-with-lease || (git pull --rebase && git push -u origin $BRANCH)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ GitHub sync complete!\""

[[workflows.workflow]]
name = "Create GitHub PR"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean any lock files first"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .git/index.lock .git/config.lock .git/refs/remotes/origin/main.lock 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Create a new branch for the PR"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Enter branch name for your PR (feature/fix/etc):\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "read BRANCH_NAME"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git checkout -b $BRANCH_NAME"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Stage and commit changes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git add --all"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Enter PR title:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "read PR_TITLE"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git commit -m \"$PR_TITLE\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Push the branch"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git push -u origin $BRANCH_NAME"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Generate GitHub PR URL"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = '''REPO_URL=$(git remote get-url origin | sed 's/\.git$//' | sed 's/git@github.com:/https:\/\/github.com\//')'''

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Create your PR at: $REPO_URL/compare/main...$BRANCH_NAME\""

[[workflows.workflow]]
name = "GitHub Sync"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean any lock files"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .git/index.lock .git/config.lock .git/refs/remotes/origin/main.lock 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Get current branch"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Fetch latest changes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üì• Fetching latest changes from GitHub...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git fetch --all --prune"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Stash any local changes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git stash save \"Auto-stashed before GitHub sync\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Sync with remote branch"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîÑ Syncing with GitHub...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git pull --rebase origin $CURRENT_BRANCH"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Pop stashed changes if any"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git stash pop || echo \"No stashed changes\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ GitHub sync complete!\""

[[workflows.workflow]]
name = "GitHub Health Check"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean any lock files"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .git/index.lock .git/config.lock .git/refs/remotes/origin/main.lock 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Check repo status"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîç Checking repository health...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git status"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run Git maintenance tasks"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üßπ Running maintenance tasks...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git gc --auto"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git prune"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git fsck --full"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Check remote configuration"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üåê Checking remote configuration...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git remote -v"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Show branch information"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üåø Checking branch information...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git branch -vv"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ GitHub health check complete!\""
