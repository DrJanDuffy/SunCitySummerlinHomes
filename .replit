run = "npm run dev"
entrypoint = "index.js"
hidden = [".config", "package-lock.json", ".next", ".swc"]
modules = ["nodejs-22"]

[nix]
channel = "stable-24_11"

[env]
NEXT_TELEMETRY_DISABLED = "1"

[deployment]
build = ["sh", "-c", "NEXT_SUPPRESS_HYDRATION_WARNING=1 npm run build"]
deploymentTarget = "cloudrun"
run = ["sh", "-c", "cd .next/standalone && NODE_ENV=production NEXT_SUPPRESS_HYDRATION_WARNING=1 node server.js"]

# Properly configured for Next.js standalone mode

[[deployment.responseHeaders]]
path = "/*"
name = "Cache-Control"
value = "public, max-age=0, must-revalidate"

[[ports]]
localPort = 3000
externalPort = 80

[[ports]]
localPort = 3001
externalPort = 3001

[[ports]]
localPort = 3002
externalPort = 3002

[[ports]]
localPort = 3003
externalPort = 3003

[[ports]]
localPort = 3004
externalPort = 4200

[[ports]]
localPort = 3005
externalPort = 5000

[[ports]]
localPort = 3006
externalPort = 5173

[[ports]]
localPort = 43821
externalPort = 3000

[workflows]
runButton = "NextJS Clean Start"

[[workflows.workflow]]
name = "Run"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Generate Sitemap"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run generate-sitemap"

[[workflows.workflow]]
name = "Build for Deployment"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run build"

[[workflows.workflow]]
name = "Build and Test Deployment"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run build"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx serve -s .next/standalone -l 3000"

[[workflows.workflow]]
name = "Deploy Preview"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run build"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd .next/standalone && PORT=3000 node server.js"

[[workflows.workflow]]
name = "Development Server"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Fix Hydration Issues"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Clean Build & Restart Dev Server"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Clean Build & Fix Dashlane Issues"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS='--no-warnings' npm run dev"

[[workflows.workflow]]
name = "Git Push to GitHub"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git add ."

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git commit -m \"Update project files\" "

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git push -u origin main"

[[workflows.workflow]]
name = "Automatic Git Push"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Reset any possible lock files"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .git/config.lock .git/refs/remotes/origin/main.lock 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Add all changes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git add ."

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Commit with timestamp"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git commit -m \"Automatic update $(date '+%Y-%m-%d %H:%M:%S')\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Force push to ensure success (use with caution)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git push -u origin main --force"

[[workflows.workflow]]
name = "Git Operations"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean up any Git lock files"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .git/index.lock .git/config.lock .git/refs/remotes/origin/main.lock 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Force a clean Git state"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global --add safe.directory /home/runner/workspace"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global user.name \"Dr Jan Duffy\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global user.email \"your-email@example.com\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Add all changes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git add ."

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Commit with descriptive message including timestamp"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git commit -m \"Update: $(date '+%Y-%m-%d %H:%M:%S')\" || echo \"No changes to commit\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Push to remote with better error handling"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git push -u origin main --force || (git pull --rebase && git push -u origin main)"

[[workflows.workflow]]
name = "Git Maintenance"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Prune remote tracking branches"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git remote prune origin"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Garbage collection to optimize repository"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git gc --aggressive --prune=now"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Verify repository integrity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git fsck --full"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Show repository status"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git status"

[[workflows.workflow]]
name = "Sync From GitHub"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean up any Git lock files first"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .git/index.lock .git/config.lock .git/refs/remotes/origin/main.lock 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Force reset to match GitHub exactly (use with caution!)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git fetch origin"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git reset --hard origin/main"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean untracked files"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git clean -fd"

[[workflows.workflow]]
name = "GitHub Pro"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Reset any lock files that might be causing issues"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .git/index.lock .git/config.lock .git/refs/remotes/origin/main.lock .git/HEAD.lock 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Configure Git with proper credentials"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global core.fileMode false"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global --add safe.directory /home/runner/workspace"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global user.name \"Dr Jan Duffy\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global user.email \"your-email@example.com\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Add all changes with detailed status"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üìù Staging changes...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git add --all"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git status --short"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Smart commit with timestamp and branch info"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîí Committing changes...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "BRANCH=$(git rev-parse --abbrev-ref HEAD)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git commit -m \"Update[$BRANCH]: $(date '+%Y-%m-%d %H:%M:%S')\" -m \"Changes made in Replit workspace\" || echo \"No changes to commit\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Push with better error handling and progress feedback"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üöÄ Pushing to GitHub...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git push -u origin $BRANCH --force-with-lease || (git pull --rebase && git push -u origin $BRANCH)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ GitHub sync complete!\""

[[workflows.workflow]]
name = "Create GitHub PR"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean any lock files first"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .git/index.lock .git/config.lock .git/refs/remotes/origin/main.lock 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Create a new branch for the PR"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Enter branch name for your PR (feature/fix/etc):\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "read BRANCH_NAME"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git checkout -b $BRANCH_NAME"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Stage and commit changes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git add --all"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Enter PR title:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "read PR_TITLE"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git commit -m \"$PR_TITLE\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Push the branch"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git push -u origin $BRANCH_NAME"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Generate GitHub PR URL"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = '''REPO_URL=$(git remote get-url origin | sed 's/\.git$//' | sed 's/git@github.com:/https:\/\/github.com\//')'''

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Create your PR at: $REPO_URL/compare/main...$BRANCH_NAME\""

[[workflows.workflow]]
name = "GitHub Sync"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean any lock files"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .git/index.lock .git/config.lock .git/refs/remotes/origin/main.lock 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Get current branch"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Fetch latest changes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üì• Fetching latest changes from GitHub...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git fetch --all --prune"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Stash any local changes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git stash save \"Auto-stashed before GitHub sync\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Sync with remote branch"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîÑ Syncing with GitHub...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git pull --rebase origin $CURRENT_BRANCH"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Pop stashed changes if any"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git stash pop || echo \"No stashed changes\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ GitHub sync complete!\""

[[workflows.workflow]]
name = "GitHub Health Check"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean any lock files"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .git/index.lock .git/config.lock .git/refs/remotes/origin/main.lock 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Check repo status"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîç Checking repository health...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git status"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run Git maintenance tasks"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üßπ Running maintenance tasks...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git gc --auto"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git prune"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git fsck --full"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Check remote configuration"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üåê Checking remote configuration...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git remote -v"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Show branch information"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üåø Checking branch information...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git branch -vv"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ GitHub health check complete!\""

[[workflows.workflow]]
name = "GitHub Professional"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "#!/bin/bash"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "set -e"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Show fancy header"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;36m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo -e \"‚îÇ  üöÄ GitHub Professional Workflow      ‚îÇ\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Reset any lock files that might be causing issues"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .git/index.lock .git/config.lock .git/refs/remotes/origin/main.lock .git/HEAD.lock 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Configure Git with proper credentials"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global core.fileMode false"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global --add safe.directory /home/runner/workspace"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global user.name \"Dr Jan Duffy\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config --global user.email \"realestate@drjanduffy.com\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git config pull.rebase true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Add all changes with detailed status"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;33müìù Staging changes...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git add --all"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "git status --short"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Smart commit with timestamp and branch info"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;33müîí Creating commit...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "BRANCH=$(git rev-parse --abbrev-ref HEAD)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "COMMIT_MSG=\"Update[$BRANCH]: $(date '+%Y-%m-%d %H:%M:%S')\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Check if there are changes to commit"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "if git diff --staged --quiet; then"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = '  echo -e "\033[1;33m‚ö†Ô∏è No changes to commit\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "else"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  git commit -m \"$COMMIT_MSG\" -m \"Changes made in Replit workspace\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  "

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  # Push with better error handling and progress feedback"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = '  echo -e "\033[1;33müöÄ Pushing to GitHub...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  git push -u origin $BRANCH --force-with-lease || (git pull --rebase && git push -u origin $BRANCH)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  "

[[workflows.workflow.tasks]]
task = "shell.exec"
args = '  echo -e "\033[1;32m‚úÖ GitHub sync complete!\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "fi"

[[workflows.workflow]]
name = "NextJS SuperDev"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "#!/bin/bash"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "set -e"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;36m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo -e \"‚îÇ  üöÄ NextJS SuperDev Mode              ‚îÇ\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Kill any running processes on port 3000"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clear Next.js cache for a fresh start"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;33müßπ Cleaning build cache...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run optimized dev server"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;32müöÄ Starting optimized dev server...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS='--max-old-space-size=4096 --no-warnings' npm run dev"

[[workflows.workflow]]
name = "Performance Audit"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "#!/bin/bash"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "set -e"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;36m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo -e \"‚îÇ  üìä Performance Audit                 ‚îÇ\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Build the project in production mode"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;33müî® Building project in production mode...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_ENV=production npm run build"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Check bundle sizes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;33müì¶ Analyzing bundle sizes...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "find .next/static -type f -name \"*.js\" | sort -k 5 -nr | xargs ls -lh | head -20"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Check for possible memory leaks"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;33müîç Checking for potential issues...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "grep -r \"addEventListener\" --include=\"*.tsx\" --include=\"*.ts\" . | grep -v \"removeEventListener\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;32m‚úÖ Performance audit complete!\033[0m"'

[[workflows.workflow]]
name = "NextJS Supercharged"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "#!/bin/bash"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "set -e"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;36m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo -e \"‚îÇ  üöÄ NextJS Supercharged                ‚îÇ\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Kill any running processes on port 3000"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean up cache for a fresh start"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;33müßπ Cleaning cache...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm cache clean --force"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Launch optimized dev server with Dashlane fix"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;32müöÄ Starting optimized dev server...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NEXT_DISABLE_SOURCEMAPS=true NODE_OPTIONS='--max-old-space-size=4096 --no-warnings' npm run dev"

[[workflows.workflow]]
name = "Project Health Check"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "#!/bin/bash"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "set -e"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;36m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo -e \"‚îÇ  üß™ Project Health Check               ‚îÇ\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean node_modules and reinstall if needed"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "if [ \"$1\" == \"--deep\" ]; then"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = '  echo -e "\033[1;33müßπ Deep cleaning node_modules...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  rm -rf node_modules"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = '  echo -e "\033[1;33müì¶ Reinstalling dependencies...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  npm install"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "else"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = '  echo -e "\033[1;33müßπ Cleaning build cache...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "fi"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Check for outdated packages"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;33müìã Checking for outdated dependencies...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm outdated"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Verify project integrity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;33müîç Checking project integrity...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm audit --production"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Check for unused dependencies"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;33müßπ Checking for unused dependencies...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx depcheck"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;32m‚úÖ Health check complete!\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;33mTip: Run with --deep flag for deeper cleaning\033[0m"'

[[workflows.workflow]]
name = "Fix Preview"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "#!/bin/bash"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "set -e"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;36m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo -e \"‚îÇ  üöÄ Fixing Preview Issues              ‚îÇ\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Kill any running processes on port 3000"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean up cache and temporary files"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;33müßπ Deep cleaning project cache...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf node_modules/.cache"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Restart the dev server with optimizations"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;32müöÄ Starting optimized dev server...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NEXT_TELEMETRY_DISABLED=1 NEXT_DISABLE_SOURCEMAPS=true NODE_OPTIONS='--max-old-space-size=4096 --no-warnings' npm run dev"

[[workflows.workflow]]
name = "NextJS Optimized Dev"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "#!/bin/bash"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "set -e"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;36m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo -e \"‚îÇ  üöÄ NextJS Optimized Development      ‚îÇ\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Kill any running processes on port 3000"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clear Next.js cache for a fresh start"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;33müßπ Cleaning build cache...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next/cache"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run optimized dev server"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;32müöÄ Starting optimized dev server...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NEXT_TELEMETRY_DISABLED=1 NEXT_DISABLE_SOURCEMAPS=true NODE_OPTIONS='--max-old-space-size=4096 --no-warnings' npm run dev"

[[workflows.workflow]]
name = "Fix Fast Refresh"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Kill any running processes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean Next.js cache thoroughly"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Set environment variables to optimize development"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NEXT_TELEMETRY_DISABLED=1 NODE_OPTIONS='--max-old-space-size=4096 --no-warnings' npm run dev"

[[workflows.workflow]]
name = "NextJS Ultimate Dev"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "#!/bin/bash"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "set -e"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;36m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo -e \"‚îÇ  üöÄ NextJS Ultimate Development      ‚îÇ\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Kill any running processes on port 3000"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean the caches thoroughly"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;33müßπ Deep cleaning project caches...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf node_modules/.cache"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run optimized dev server with browser extension fixes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;32müöÄ Starting optimized dev server...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NEXT_TELEMETRY_DISABLED=1 NEXT_DISABLE_SOURCEMAPS=true NEXT_IGNORE_DUPLICATES=true NODE_OPTIONS='--max-old-space-size=4096 --no-warnings --tls-min-v1.0' npm run dev"

[[workflows.workflow]]
name = "Fix Page Transitions"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Next.js Animation Mode"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NEXT_TELEMETRY_DISABLED=1 npm run dev"

[[workflows.workflow]]
name = "NextJS Animation Mode"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NEXT_TELEMETRY_DISABLED=1 NEXT_DISABLE_SOURCEMAPS=true npm run dev"

[[workflows.workflow]]
name = "Page Transition Dev"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "#!/bin/bash"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "set -e"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;36m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo -e \"‚îÇ  üöÄ Page Transition Development       ‚îÇ\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Kill any running processes on port 3000"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clear Next.js cache for a fresh start"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;33müßπ Cleaning build cache...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf node_modules/.cache"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Start development server with transition-friendly environment"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\033[1;32müöÄ Starting optimized dev server for transitions...\033[0m"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NEXT_TELEMETRY_DISABLED=1 NEXT_DISABLE_SOURCEMAPS=true NODE_OPTIONS='--max-old-space-size=4096 --no-warnings' npm run dev"

[[workflows.workflow]]
name = "React 19 Development"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "React 19 Page Transitions"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NEXT_TELEMETRY_DISABLED=1 npm run dev"

[[workflows.workflow]]
name = "Install Dependencies"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Remove node_modules and package-lock.json"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf node_modules package-lock.json"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Create .npmrc if it doesn't exist"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"legacy-peer-deps=true\" > .npmrc"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"engine-strict=false\" >> .npmrc"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Install dependencies with legacy-peer-deps flag"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm install --legacy-peer-deps"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Verify installation"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Installed package versions:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm list react react-dom next framer-motion typescript --depth=0"

[[workflows.workflow]]
name = "React 19 Fix Hydration"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Kill any running processes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean Next.js cache completely"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Add flags to prevent hydration warnings"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NEXT_SUPPRESS_HYDRATION_WARNING=1 NEXT_TELEMETRY_DISABLED=1 NODE_OPTIONS='--no-warnings' npm run dev"

[[workflows.workflow]]
name = "React 19 Fix Hydration"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Kill any running processes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean Next.js cache completely"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Add flags to prevent hydration warnings"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NEXT_SUPPRESS_HYDRATION_WARNING=1 NEXT_TELEMETRY_DISABLED=1 NODE_OPTIONS='--no-warnings' npm run dev"

[[workflows.workflow]]
name = "Fix Scripts and Missing Images"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NEXT_SUPPRESS_HYDRATION_WARNING=1 NEXT_TELEMETRY_DISABLED=1 npm run dev"

[[workflows.workflow]]
name = "NextJS Clean Start"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "kill $(lsof -t -i:3000) 2>/dev/null || pkill -f node || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NEXT_SUPPRESS_HYDRATION_WARNING=1 NEXT_TELEMETRY_DISABLED=1 NODE_OPTIONS='--no-warnings' npm run dev"

[[workflows.workflow]]
name = "Optimized Deployment Build"
author = 22930014
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean up any running processes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pkill -f node || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Clean build cache"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf .next"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Perform a clean build with optimizations"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NEXT_TELEMETRY_DISABLED=1 NEXT_SUPPRESS_HYDRATION_WARNING=1 NODE_OPTIONS='--max-old-space-size=4096 --no-warnings' npm run build"
